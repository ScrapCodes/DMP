# //#cluster
akka {

#  loglevel = DEBUG

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  remote {
    transport = "akka.remote.netty.NettyRemoteTransport"
    log-remote-lifecycle-events = off

    netty {
       message-frame-size = 1024 MiB
       hostname = "127.0.0.1"
       port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka://ClusterSystem@127.0.0.1:2551",
      "akka://ClusterSystem@127.0.0.1:2552"]

    auto-down = on
  }
}

work-disseminator-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 5
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 4.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 20
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 10
}

# //#cluster

akka.actor.deployment {
  /matrixFacade/matrixProcessorRouter = {
    router = "from-code"
    metrics-selector = mix
    nr-of-instances = 100
    cluster {
      enabled = on
      routees-path = "/user/matrixProcessor"
#      use-role = backend
      allow-local-routees = off
    }
  }
   /matrixProcessor/matrixFacade = {
    router = broadcast
    metrics-selector = mix
    nr-of-instances = 100
    cluster {
      enabled = on
      routees-path = "/user/matrixFacade"
#      use-role = backend
      allow-local-routees = off
    }
  }

}
